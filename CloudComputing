-- Database
main.py

import pymysql
import cfg
import csv

con = pymysql.connect(user=cfg.db5357['user'],
                      password=cfg.db5357['password'],
                      host=cfg.db5357['host'],
                      port=cfg.db5357['port'],
                      database=cfg.db5357['db'])


def executeQueryFile(year):
    query = f"(SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_2B) WHEN 1 THEN '2B' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = '2B' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_2b) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_SS) WHEN 1 THEN 'SS' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'SS' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_ss) ) Q2) ) UNION all (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_p) WHEN 1 THEN 'P' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'P' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q1.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_p) ) Q1) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_LF) WHEN 1 THEN 'LF' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'LF' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q1.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_LF) ) Q1) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_3B) WHEN 1 THEN '3B' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = '3B' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q1.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_3B) ) Q1) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_DH) WHEN 1 THEN 'DH' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'DH' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_DH) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_1B) WHEN 1 THEN '1B' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = '1B' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_1B) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_RF) WHEN 1 THEN 'RF' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'RF' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_RF) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_C) WHEN 1 THEN 'C' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'C' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_C) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_CF) WHEN 1 THEN 'CF' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'CF' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_CF) ) Q2) )"
    try:
        with con.cursor() as cur:
            cur.execute(query)
            fields = ['Player ID', 'Position', 'Runs Created']
            filename = cfg.filename['name']
            list = []
            with open(filename, 'w') as csvfile:
                csvwriter = csv.writer(csvfile)
                csvwriter.writerow(fields)
                for (playerId, position, runs_created) in cur:
                    l = []
                    l.append(str(playerId))
                    l.append(str(position))
                    l.append(str(runs_created))
                    list.append(l)

                csvwriter.writerows(list)

    finally:
        con.close()
        print('Execution Finished, check the results on ', cfg.filename['name'])



def executeQueryConsole(year):
    query = f"(SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_2B) WHEN 1 THEN '2B' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = '2B' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_2b) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_SS) WHEN 1 THEN 'SS' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'SS' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_ss) ) Q2) ) UNION all (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_p) WHEN 1 THEN 'P' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'P' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q1.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_p) ) Q1) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_LF) WHEN 1 THEN 'LF' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'LF' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q1.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_LF) ) Q1) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_3B) WHEN 1 THEN '3B' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = '3B' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q1.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_3B) ) Q1) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_DH) WHEN 1 THEN 'DH' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'DH' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_DH) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_1B) WHEN 1 THEN '1B' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = '1B' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_1B) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_RF) WHEN 1 THEN 'RF' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'RF' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_RF) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_C) WHEN 1 THEN 'C' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'C' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_C) ) Q2) ) UNION ALL (SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( SELECT a1.playerid, a1.yearID, (CASE GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH)) = SUM(G_CF) WHEN 1 THEN 'CF' ELSE 'X' END) POSITION FROM appearances a1 WHERE a1.yearid = {year} GROUP BY a1.playerID ) pos, ( SELECT b1.playerID, b1.yearId, COALESCE((SUM(coalesce(b_H,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0))) / (SUM(coalesce(b_AB,0)) + SUM(coalesce(b_BB,0)) + SUM(coalesce(b_HBP,0)) + SUM(coalesce(b_SF,0))) * (SUM(coalesce(b1.b_H,0)) + SUM(coalesce(b1.b_2B,0)) + 2* SUM(coalesce(b1.b_3B,0)) + 3* SUM(coalesce(b1.b_HR,0))),0) RUNS_CREATED FROM batting b1 WHERE b1.yearid = {year} GROUP BY(b1.playerID) ) rc WHERE pos.playerid = rc.playerid AND pos.yearid = rc.yearid AND pos.yearID = {year} AND POSITION = 'CF' GROUP BY pos.playerID having rc.RUNS_CREATED = (SELECT MAX(Q2.runscreated) max_runs_created FROM ( SELECT a.playerID, COALESCE((SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0))) / (SUM(COALESCE(b.b_AB,0)) + SUM(coalesce(b.b_BB,0)) + SUM(COALESCE(b.b_HBP,0)) + SUM(COALESCE(b.b_SF,0))) * (SUM(COALESCE(b.b_H,0)) + SUM(COALESCE(b.b_2B,0)) + 2* SUM(coalesce(b.b_3B,0)) + 3* SUM(coalesce(b.b_HR,0))),0) runscreated FROM batting b, appearances a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = {year} GROUP BY a.playerId having GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_CF) ) Q2) )"
    try:
        with con.cursor() as cur:
            cur.execute(query)
            print('Player ID\tPosition\tRuns Created')
            for (playerId, position, runs_created) in cur:
                print(str(playerId)+"\t"+ str(position) +"\t\t\t"+ str(runs_created))
    finally:
        con.close()
        print('Execution Finished.')

def main():
    year = int(input("Please Enter the Year: "))
    executionOption = int(input("Please enter 1 to output in file, and enter 2 to output on console "))
    if(executionOption == 1):
        executeQueryFile(year)
    if(executionOption == 2):
        executeQueryConsole(year);

if __name__ == "__main__":
    main()
    
   
   
cfg.py:
db5357 = {'host': 'localhost', 'user': 'mohammad', 'password': 'mohammad', 'db': 'cloudcomputing', 'port': 3306}

filename = {'name': 'C:\cloudcomputing\AbuShaira.as1.csv'}


----------------------------------------------------------------------

Map Reduce:

# C:\PythonProjects\CloudComputingMapReduceMrJob>python 14AssignmentMapReduce.py c:/cloudcomputing/Appearances.csv c:/cloudcomputing/Batting.csv --year 2015 -q
from mrjob.job import MRJob
from mrjob.job import MRStep
from mrjob.util import log_to_stream
import logging
import mrjob

log = logging.getLogger(__name__)


class PositionRunsCreatedOfEachPlayer(MRJob):
    OUTPUT_PROTOCOL = mrjob.protocol.RawValueProtocol
    positions = ['2B', '3B', '1B', 'CF', 'LF', 'RF', 'SS', 'P', 'C', 'DH']

    def steps(self):
        return [
            MRStep(mapper=self.mapper1, reducer=self.reducer1),
            MRStep(reducer=self.reducer2),
            MRStep(reducer=self.reducer3),
            MRStep(reducer=self.reducer4),
            MRStep(reducer=self.reducer5),
            MRStep(reducer=self.reducer6)
        ]


    def configure_args(self):
        super(PositionRunsCreatedOfEachPlayer, self).configure_args()
        self.add_passthru_arg("-year", "--year", help="your argument description")


    def set_up_logging(cls, quiet=False, verbose=False, stream=None):
        log_to_stream(name='mrjob', debug=verbose, stream=stream)
        log_to_stream(name='__main__', debug=verbose, stream=stream)

    def mapper1(self,_,line):
        splits = line.split(',')
        if(len(splits) == 21 and splits[0] != 'yearID'):
            (yearID, teamID, lgID, playerID, G_all, GS, G_batting, G_defense, G_p, G_c, G_1b, G_2b, G_3b, G_ss, G_lf, G_cf, G_rf, G_of, G_dh, G_ph, G_pr) = splits
            if yearID == self.options.year:
                yield 'Appearances#'+playerID, [int(G_2b), int(G_3b), int(G_1b), int(G_cf), int(G_lf), int(G_rf), int(G_ss), int(G_p), int(G_c), int(G_dh)]
        elif (len(splits) == 22 and splits[0] != 'playerID'):
            (playerID, yearID, stint, teamID, lgID, G, b_AB, R, b_H, b_2B, b_3B, b_HR, RBI, SB, CS, b_BB, SO, IBB, b_HBP, SH, b_SF, GIDP) = splits
            if yearID == self.options.year:
                yield 'Batting#'+playerID, [b_H or 0, b_BB or 0, b_HBP or 0, b_AB or 0, b_SF or 0, b_2B or 0, b_3B or 0, b_HR or 0]


    def reducer1(self, key,values):
        values = [x for x in values]
        if key.startswith('Appearances'):
            sum1 = [0] * 10
            map = {}
            for row in range(len(values)):
                for col in range(len(values[0])):
                    sum1[col] = sum1[col] + int(values[row][col])
                map[key] = sum1

            max1 = max(sum1)
            for i in range(0, len(sum1)):
                if sum1[i] == max1:
                    yield key+"@"+self.positions[i], None
        else:
            sum2 = [0] * 8
            map2 = {}
            for row in range(len(values)):
                for col in range(len(values[0])):
                    sum2[col] = sum2[col] + int(values[row][col])
                map2[key] = sum2

            sum1, sum2, sum3 = 0, 0, 0
            result = 1
            for p in map2:
                sum1 = sum1 + map2[p][0] + map2[p][1] + map2[p][2]
                sum2 = sum2 + map2[p][3] + map2[p][1] + map2[p][2] + map2[p][4]
                sum3 = sum3 + map2[p][0] + map2[p][5] + (2 * map2[p][6]) + (3 * map2[p][7])
                try:
                    result = sum1 / sum2 * sum3
                except ZeroDivisionError:
                    result = 0

                if len(p) != 0:
                    yield p.replace('Batting', 'Appearances')+"@", result



    def reducer2(self, key, values):
        values = [x for x in values]
        yield key.split('@')[0], (values, key.split('@')[1])

    def reducer3(self,key, values):
        values = [x for x in values]
        yield values[1][1], key + "*" +str(values[0][0])

    def reducer4(self,key,values):
        values = [x for x in values]
        yield key, max(float(value.split("*")[1][1:-1]) for value in values)

        for value in values:
            yield key, value


    def reducer5(self,key,values):
        values = [x for x in values]
        mymap = {}
        for value in values:
            if key not in mymap:
                mymap[key] = value
            else:
                recVal = float(value.split("*")[1][1:-1])
                if recVal == mymap[key]:
                    yield value.split("*")[0].split("#")[1], [key, recVal]

    def reducer6(self, key, values):
        values = [x for x in values]
        for value in values:
            position = value[0]
            yield None,  key + "\t"+position + "\t\t\t" + str(float("{:.5f}".format(value[1])))



if __name__ =="__main__":
    PositionRunsCreatedOfEachPlayer.run()
  
 ----------------------------------------------------------------------------------------
 
 Spark:
 from pyspark.sql import SparkSession
import sys

def init_spark():
  spark = SparkSession.builder.appName("Baseball").getOrCreate()
  sc = spark.sparkContext
  return spark,sc

def demo(argv):
  year = argv[0]
  spark, sc = init_spark();
  spark.conf.set("spark.sql.shuffle.partitions","5")
  appearancesDF = spark.read.option("inferSchema","true").option("header","true").csv("C:/cloudcomputing/Appearances.csv")
  appearancesDF = appearancesDF.where("yearID = "+year)
  battingDF = spark.read.option("inferSchema","true").option("header","true").csv("C:/cloudcomputing/Batting.csv")
  battingDF = battingDF.where("yearID = "+ year)
  appearancesDF.createOrReplaceTempView("aView")
  battingDF.createOrReplaceTempView("bView")

  # query = f'SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_2B) = true then "2B" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "2B" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_2b))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_ss) = true then "SS" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "SS" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_ss))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_p) = true then "P" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "P" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_p))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_lf) = true then "LF" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "LF" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_lf))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_3B) = true then "3B" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "3B" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_3B))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_DH) = true then "DH" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "DH" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_DH))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_1B) = true then "1B" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "1B" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_1b))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_RF) = true then "RF" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "RF" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_RF))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_c) = true then "C" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "C" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_c))Q2) \
  #                 union all \
  #                 SELECT pos.playerID, pos.position, rc.RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_cf) = true then "CF" else "X" end) as position from aView where yearId=2020 group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView WHERE yearID = 2020 GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND pos.yearID = 2020 AND POSITION = "CF" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId AND a.yearId = 2020 GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_cf))Q2)';

  query = f'SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_2B) = true then "2B" else "X" end) as position from aView group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND POSITION = "2B" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_2b))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_ss) = true then "SS" else "X" end) as position from aView group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND POSITION = "SS" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId  GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_ss))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_p) = true then "P" else "X" end) as position from aView where group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID  AND POSITION = "P" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_p))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_lf) = true then "LF" else "X" end) as position from aView  group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND POSITION = "LF" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_lf))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_3B) = true then "3B" else "X" end) as position from aView  group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND POSITION = "3B" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_3B))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_DH) = true then "DH" else "X" end) as position from aView  group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND POSITION = "DH" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId  GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_DH))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_1B) = true then "1B" else "X" end) as position from aView group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView  GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID  AND POSITION = "1B" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId  GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_1b))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_RF) = true then "RF" else "X" end) as position from aView group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView  GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID  AND POSITION = "RF" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_RF))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_c) = true then "C" else "X" end) as position from aView group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID AND POSITION = "C" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_c))Q2) \
            union all \
            SELECT pos.playerID, pos.position, format_number(rc.RUNS_CREATED,5) RUNS_CREATED FROM ( select playerID, yearID, (case when GREATEST(SUM(G_2b), SUM(G_3b), SUM(G_1b), SUM(G_cf), SUM(G_lf), SUM(G_rf), SUM(G_ss), SUM(G_p), SUM(G_c), SUM(G_DH))=sum(G_cf) = true then "CF" else "X" end) as position from aView group by playerID, yearID) pos , ( SELECT playerID, yearId, COALESCE((SUM(COALESCE(H,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0))) / (SUM(COALESCE(AB,0)) + SUM(COALESCE(BB,0)) + SUM(COALESCE(HBP,0)) + SUM(COALESCE(SF,0))) * (SUM(COALESCE(H,0)) + SUM(COALESCE(2B,0)) + 2*SUM(COALESCE(3B,0)) + 3* SUM(COALESCE(HR,0))),0) RUNS_CREATED FROM bView  GROUP BY playerID, yearID ) rc WHERE pos.playerID = rc.playerID AND pos.yearID = rc.yearID  AND POSITION = "CF" GROUP BY pos.playerID, pos.yearId, rc.runs_created, pos.position HAVING rc.RUNS_CREATED = ( SELECT MAX(Q2.runscreated) max_runs_created FROM(SELECT a.playerID, COALESCE((SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0))) / (SUM(COALESCE(b.AB,0)) + SUM(COALESCE(b.BB,0)) + SUM(COALESCE(b.HBP,0)) + SUM(COALESCE(b.SF,0))) * (SUM(COALESCE(b.H,0)) + SUM(COALESCE(b.2B,0)) + 2* SUM(COALESCE(b.3B,0)) + 3* SUM(COALESCE(b.HR,0))),0) runscreated FROM bView b, aView a WHERE a.playerID = b.playerID AND a.yearID = b.yearId AND a.teamId = b.teamId GROUP BY a.playerId HAVING GREATEST(SUM(a.G_2b), SUM(a.G_3b), SUM(a.G_1b), SUM(a.G_cf), SUM(a.G_lf), SUM(a.G_rf), SUM(a.G_ss), SUM(a.G_p), SUM(a.G_c), SUM(a.G_DH)) = SUM(a.G_cf))Q2)'

  df = spark.sql(query).withColumnRenamed("RUNS_CREATED","Runs Created").withColumnRenamed("position","Position").withColumnRenamed("playerID","PlayerID")
  df.show(df.count())



if __name__ == "__main__":
  demo(sys.argv[1:])